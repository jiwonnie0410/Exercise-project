<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdminDAO">

<!--
	지원
	1. 반짝 운동별 통계
	2. 동호회 매치 운동별 통계
	3. 성별로 연령대 및 운동 통계
	4. 지역별 통계
	5. 챌린지 목록
	6. 챌린지 생성
	7. 챌린지 참여 중인 인원
	8. 챌린지 상세 내용
	9. 챌린지 참여한 사람들 목록
 -->

<!-- 1. 반짝 운동별 통계 -->
		  	<select id="chartSgroup" resultType="map" >
					SELECT 	COUNT(*) "count", C.CD_NAME "exercise"
					FROM 	SGROUP S, CODE C
					WHERE 	S.SPORTS1_CD = C.CD_ID
					GROUP BY C.CD_NAME
		  	</select>


<!-- 2. 동호회 매치 운동별 통계 -->
			<select id="chartBgroup" resultType="map">
					SELECT 	COUNT(*) "count", C.CD_NAME "exercise"
					FROM 	BGROUP B, CODE C
					WHERE 	B.SPORTS2_CD = C.CD_ID
					GROUP BY C.CD_NAME
			</select>


<!-- 3. 성별로 연령대 및 운동 통계(반짝만) -->
			<select id="chartGender" parameterType="map">
					<!-- #{gender}성별의  ${startAge}살부터 ${endAge}살의 사람들이 반짝 한 횟수 -->
					<!-- 예: 여성 20살부터 29살까지 사람들이 반짝 한 횟수 -->
					SELECT 	COUNT(*), C.CD_NAME
					FROM 	ACTIVE_HIST H, MEMBERS M, CODE C, SGROUP S
					WHERE 	H.M_ID = M.M_ID
					        AND H.SG_NUM = S.SG_NUM
					        AND S.SPORTS1_CD = C.CD_ID
					        AND M.GENDER_CD = #{gender}
					        AND M.M_AGE BETWEEN ${startAge} AND ${endAge}
					GROUP BY C.CD_NAME
			</select>


<!-- 4. 지역별 통계 -->
			<select id="chartCity" parameterType="map" resultType="map">
					<!-- ${month}월에  #{city} 사는 사람들이 반짝 한 횟수 -->
					<!-- 예: 12월에 대구에 사는 사람들이 반짝 한 횟수 -->
					SELECT  TO_CHAR(SYSDATE, 'MM') AS "month",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '서울',1,0)    ) AS "count1",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '대구',1,0)    ) AS "count2",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '부산',1,0)    ) AS "count3",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '광주',1,0)    ) AS "count4",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '인천',1,0)    ) AS "count5",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '대전',1,0)    ) AS "count6",
					        COUNT( decode(SUBSTR(M.M_LOCATION, 1, 2), '울산',1,0)    ) AS "count7",
					        SUBSTR(M.M_LOCATION, 1, 2) "city"
					        
					FROM    MEMBERS M, SGROUP S, ACTIVE_HIST H
					WHERE   	H.M_ID = M.M_ID 
							AND H.SG_NUM = S.SG_NUM
					        AND TO_CHAR(S.SG_END_DTTM, 'M') = #{month}
					        AND M.M_LOCATION LIKE '${city}%'
					GROUP BY M.M_LOCATION, TO_CHAR(SYSDATE, 'MM')
			</select>
			
			
<!-- 5. 챌린지 목록 -->
			<select id="challengeList" resultType="map">
					SELECT 	CL_NUM, 
							CL_STATUS, 
							CL_NAME, 
							CL_CONTENT, 
							TO_CHAR(CL_START_DTTM, 'yyyy/mm/dd') CL_START_DTTM, 
							TO_CHAR(CL_END_DTTM, 'yyyy/mm/dd') CL_END_DTTM, 
							CL_SCORE
					FROM CHALLENGE
					ORDER BY CL_NUM
			</select>


<!-- 6. 챌린지 생성 -->
			<insert id="insertChallenge" parameterType="challenge">
			
					<!-- 챌린지 번호 제일 최근 거 가져오기 -> ChallengeVO(별칭 challenge)의 cl_num 필드에 담은 후 두번째 쿼리에 적용  -->
					<selectKey order="BEFORE" resultType="int" keyProperty="cl_num">
							SELECT MAX(CL_NUM)+1
							FROM CHALLENGE
					</selectKey>
					
					insert into challenge( 	cl_num, 
											cl_status, 
											cl_name, 
											cl_content,
											<if test="sports1_cd != null and sports1_cd != ''">
												sports1_cd,
											</if>
											cl_cnt, 
											cl_start_dttm, 
											cl_end_dttm, 
											cl_score
										 )
					values( ${cl_num}, 
							#{cl_status},
							#{cl_name}, 
							#{cl_content},
							<if test="sports1_cd != null and sports1_cd != ''">
								#{sports1_cd}, 
							</if>
							${cl_cnt}, 
							#{cl_start_dttm}, 
							#{cl_end_dttm}, 
							${cl_score}
						   )
			</insert>
			

<!-- 7. 챌린지 참여 중인 인원 -->
			<select id="challenegeCount">
					SELECT C.CL_NUM, C.CL_STATUS, C.CL_NAME, D.CD_NAME, C.CL_START_DTTM, C.CL_END_DTTM,
					        H.M_ID, H.CLH_CNT
					FROM CHALLENGE C, CODE D, CHALLENGE_HIST H
					WHERE C.SPORTS1_CD = D.CD_ID AND H.CL_NUM = C.CL_NUM
			</select>
			
			
<!-- 8. 챌린지 상세 내용 -->
			<select id="challengeDetail">
					SELECT 	C.CL_NUM, 
							C.CL_STATUS, 
							C.CL_NAME, 
							C.CL_CONTENT, 
							D.CD_NAME, 
							C.CL_CNT, 
							C.CL_START_DTTM,
					        C.CL_END_DTTM, 
					        C.CL_SCORE
					FROM CHALLENGE C, CODE D
					WHERE C.SPORTS1_CD = D.CD_ID
			</select>
			

<!-- 9. 챌린지 참여한 사람들 목록 -->
			<select id="challengePeople">
					SELECT 	M.M_ID, 
							M.M_AGE, 
							D.CD_NAME, 
							SUBSTR(M.M_LOCATION, 1, 2) "M_LOCATION"
					FROM CHALLENGE C, CHALLENGE_HIST H, MEMBERS M, CODE D
					WHERE C.CL_NUM = H.CL_NUM 
							AND M.M_ID = H.M_ID 
							AND M.GENDER_CD = D.CD_ID
							<!-- AND 조건 챌린지 번호 들어가야 함 -->
			</select>
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!--진영  -->
	<!-- 01. 회원정보 상세조회 -->
    <select id="viewMember" resultType="members">
        SELECT 
          m_id AS m_id, 
          m_name AS m_name,
          m_email AS m_email
          <!-- user_regdate AS userRegdate,
          user_regdate AS userUpdatedate -->
        FROM MEMBERS
       <!--  WHERE m_id = #{m_id} -->
        WHERE m_id =#{m_id}
    </select>
	<!--2.전체조회  -->
	<select id="getUserList" resultType="members" parameterType="members">
		select M_ID, M_PASSWORD, M_NAME, M_NICK,M_IMAGE_CD,
			M_XY,M_LOCATION,M_AGE,GENDER_CD,M_GRANT,
			M_LEVEL_CD,M_STATUS_CD,M_RADIUS,M_NOTICE,M_EMAIL
		from MEMBERS
		<where>
			<if test="m_id != null and m_id != '' ">
				m_id like '%' || #{m_id} || '%'
			</if>
			<if test="m_name != null and m_name != '' ">
				and m_name like '%' || #{m_name} || '%'
			</if>
		</where>
	</select>
	<!-- 3.삭제 -->
	<delete id="deleteUser" parameterType="members">
		delete from MEMBERS 
		where m_id = #{m_id}
	</delete>		
			
</mapper>